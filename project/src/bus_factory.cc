/**
 * @file passenger_factory.cc
 *
 * @copyright 2019 3081 Staff, All rights reserved.
 */
#include "src/bus_factory.h"

/*******************************************************************************
 * Member Functions
 ******************************************************************************/
/*
  GenerateBus function generates a different type of bus
  by busType which is generated by random number generator
*/

Bus * BusFactory::GenerateBus(std::string id, Route * outbound,
   Route * inbound, double speed) {
     /*std::random_device dev;
     std::mt19937 rng(dev());
     std::uniform_int_distribution<std::mt19937::result_type> dist1(1, 3);
     int rand_int = dist1(rng);*/

     time_t theTime = time(NULL);
     struct tm *aTime = localtime(&theTime);
     int hour = aTime->tm_hour;

     if ( hour > 6 && hour < 8 ) {
       if ( stratNum1%2 == 0 ) {
         std::cout << "strategy 1 proudcing small bus" << std::endl;
         return new SmallBus(id, outbound, inbound, 30, speed);
       } else {
         std::cout << "strategy 1 proudcing regular bus" << std::endl;
         return new RegularBus(id, outbound, inbound, 60, speed);
       }
       stratNum1++;
     } else if ( hour > 8 && hour < 15 ) {
       if ( stratNum2%2 == 0 ) {
         std::cout << "strategy 2 proudcing regular bus" << std::endl;
         return new RegularBus(id, outbound, inbound, 60, speed);
       } else {
         std::cout << "strategy 2 proudcing large bus" << std::endl;
         return new LargeBus(id, outbound, inbound, 90, speed);
       }
       stratNum2++;
     } else if ( hour > 15 &&  hour < 20 ) {
       if ( stratNum3%3 == 0 ) {
         std::cout << "strategy 3 proudcing small bus" << std::endl;
         return new SmallBus(id, outbound, inbound, 30, speed);
       } else if ( stratNum3%3 == 1 ) {
         std::cout << "strategy 3 proudcing regular bus" << std::endl;
         return new RegularBus(id, outbound, inbound, 60, speed);
       } else {
         std::cout << "strategy 3 proudcing large bus" << std::endl;
         return new LargeBus(id, outbound, inbound, 90, speed);
       }
       stratNum3++;
     } else {
       return new SmallBus(id, outbound, inbound, 30, speed);
     }

    /*if (  rand_int == 1 ) {
      return new SmallBus(id, outbound, inbound, 30, speed);
    } else if ( rand_int == 2 ) {
      return new RegularBus(id, outbound, inbound, 60, speed);
    } else if ( rand_int == 3 ) {
      return new LargeBus(id, outbound, inbound, 90, speed);
    }*/
}
